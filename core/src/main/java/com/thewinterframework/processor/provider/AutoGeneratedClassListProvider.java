package com.thewinterframework.processor.provider;

import java.lang.annotation.Annotation;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.List;

public interface AutoGeneratedClassListProvider {

	String AUTO_GENERATED_CLASS_LIST_PROVIDER_PACKAGE_PREFIX = ".autogenerated_winter_class_list_providers";
	String AUTO_GENERATED_CLASS_LIST_PROVIDER_PREFIX = "ClassListProvider";

	static AutoGeneratedClassListProvider scan(Class<?> plugin, Class<? extends Annotation> annotation) throws InvocationTargetException, InstantiationException, IllegalAccessException {
		final var className = annotation.getSimpleName() + AUTO_GENERATED_CLASS_LIST_PROVIDER_PREFIX;
		final var providerName = plugin.getPackageName() + AUTO_GENERATED_CLASS_LIST_PROVIDER_PACKAGE_PREFIX + "." + className;

		try {
			final var providerClass = Class.forName(providerName);
			return (AutoGeneratedClassListProvider) providerClass.getConstructors()[0].newInstance();
		} catch (ClassNotFoundException exception) { // maybe the plugin is not using that annotation
			return ArrayList::new;
		}
	}

	List<Class<?>> getClassList();

}
