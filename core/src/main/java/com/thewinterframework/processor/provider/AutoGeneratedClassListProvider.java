package com.thewinterframework.processor.provider;

import java.lang.annotation.Annotation;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.List;

/**
 * Provides a list of auto-generated classes.
 */
public interface AutoGeneratedClassListProvider {

	String AUTO_GENERATED_CLASS_LIST_PROVIDER_PACKAGE_PREFIX = ".autogenerated_winter_class_list_providers";
	String AUTO_GENERATED_CLASS_LIST_PROVIDER_PREFIX = "ClassListProvider";

	/**
	 * Scans for an auto-generated class list provider.
	 *
	 * @param plugin     the plugin class
	 * @param annotation the annotation class
	 * @return the auto-generated class list provider
	 * @throws InvocationTargetException if the constructor of the provider throws an exception
	 * @throws InstantiationException    if the provider cannot be instantiated
	 * @throws IllegalAccessException     if the provider cannot be accessed
	 */
	static AutoGeneratedClassListProvider scan(Class<?> plugin, Class<? extends Annotation> annotation) throws InvocationTargetException, InstantiationException, IllegalAccessException {
		final var className = annotation.getSimpleName() + AUTO_GENERATED_CLASS_LIST_PROVIDER_PREFIX;
		final var providerName = plugin.getPackageName() + AUTO_GENERATED_CLASS_LIST_PROVIDER_PACKAGE_PREFIX + "." + className;

		try {
			final var providerClass = plugin.getClassLoader().loadClass(providerName);
			return (AutoGeneratedClassListProvider) providerClass.getConstructors()[0].newInstance();
		} catch (ClassNotFoundException exception) { // maybe the plugin is not using that annotation
			return ArrayList::new;
		}
	}

	/**
	 * @return the list of classes
	 */
	List<Class<?>> getClassList();

}
